if ( cat$category_id[i] == 125) {
pros[pros$COMPANY_ID==cat$company_id[i],"ELECT"] <- 'YES'
}
## carpintero
if ( cat$category_id[i] == 132) {
pros[pros$COMPANY_ID==cat$company_id[i],"CARP"] <- 'YES'
}
## Plomero
if ( cat$category_id[i] == 126) {
pros[pros$COMPANY_ID==cat$company_id[i],"PINT"] <- 'YES'
}
## impermeablizador
if ( cat$category_id[i] == 143) {
pros[pros$COMPANY_ID==cat$company_id[i],"IMPER"] <- 'YES'
}
## albañil
if ( cat$category_id[i] == 130) {
pros[pros$COMPANY_ID==cat$company_id[i],"ALBAÃ."] <- 'YES'
}
## herrero
if ( cat$category_id[i] == 135) {
pros[pros$COMPANY_ID==cat$company_id[i],"HERRE"] <- 'YES'
}
## Fumigadores (no hay fumigaciones en )
#if ( cat$category_id[i] == ------- ) {
#        pros[pros$COMPANY_ID==cat$company_id[i],"FUMIGA"] <- 'YES'
## Instalador de interferones
if ( cat$category_id[i] == 138) {
pros[pros$COMPANY_ID==cat$company_id[i],"CONTRAT"] <- 'YES'
}
if ( cat$category_id[i] == 138) {
pros[pros$COMPANY_ID==cat$company_id[i],"CONTRAT"] <- 'YES'
}
}
write.csv(pros,file = "~/data/pros/prosCategorias.csv",row.names = FALSE)
date()
Sys.time()
system("cat tracking_r.txt")
system("echo hola")
system("date")
grep("CID","AAAAACID8484")
grepRaw("CID","AAAAACID8484")
regexpr("cid","8394jkdcidiosiou4")
regexpr("cid","8394jkdcidiosiou4")[1]
grepRaw("cid","8394jkdcidiosiou4")[1]
grepRaw("cid","839jjjjjj4jkdcidiosiou4")[1]
grepRaw("cid","839jjjjjj4jkdiosiou4")[1]
grepRaw("cid","839jjjjjj4jkdiciosiou4")[1]
url <- "https://app.periscopedata.com/api/iguanafix/chart/csv/f86d75ad-d8af-8aba-f414-ec9fa88e7970"
anticiposDePeriscope <- read.csv(url)
anticiposDePeriscope
ls
anticiposDePeriscope
tags <- anticiposDePeriscope$tags
tgs
tags
substr("*.CID","",tags)
gsub(".*.CID","",tags)
gsub("*.CID","",tags)
gsub(".*CID","",tags)
gsub(",","",gsub(".*CID","",tags))
gsub(",.*","",gsub(".*CID","",tags))
tags
getCIDs <- function(strings) {
cidIndex <- grepRaw("CID",strings)
if ( ! is.na(cidIndex)) {
return(gsub(",.*","",gsub(".*CID","",tags)))
} else { return(cidIndex) }
}
getCIDs(tags)
getCIDs <- function(strings) {
cidIndex <- grepRaw("CID",strings)
if ( ! is.na(cidIndex) ) {
return(gsub(",.*","",gsub(".*CID","",tags)))
}
else { return(cidIndex) }
}
getCIDs(tags)
getCIDs <- function(strings) {
cidIndex <- grepRaw("CID",strings)
if ( ! is.na(cidIndex) ) {
return(gsub(",.*","",gsub(".*CID","",tags)))
}
if ( is.na(cidIndex) )  { return(cidIndex) }
}
getCIDs(tags)
grep("CID",tags)
tags
grepRaw("CID",tags)
getCIDs <- function(strings) {
cid <- sapply(strings, function(x) {
if ( grepl("CID",x)) {
return(gsub(",.*","",gsub(".*CID","",x)))
} else { return(NA)}
})
}
getCIDs(tags)
getCIDs(tags)
getCIDs <- function(strings) {
cid <- sapply(strings, function(x) ifelse(grepl("CID",X),
NA,g
sub(",.*","",gsub(".*CID","",x))) )
}
getCIDs(tags)
getCIDs <- function(strings) {
cid <- sapply(strings, function(x) ifelse(grepl("CID",x),
NA,g
sub(",.*","",gsub(".*CID","",x))) )
}
getCIDs(tags)
getCIDs <- function(strings) {
cid <- sapply(strings, function(x) ifelse(grepl("CID",x),
gsub(",.*","",gsub(".*CID","",x)),
NA) )
}
getCIDs(tags)
tags
sapply(tags, function(x) ifelse(grepl("CID",x),
gsub(",.*","",gsub(".*CID","",x)),
NA) )
tags <- sapply(tags, function(x) ifelse(grepl("CID",x),
gsub(",.*","",gsub(".*CID","",x)),
NA) )
tags
head(anticiposDePeriscope)
data("diamonds")
data("diamond")
father.son
library(datasets)
install.packages("UsingR")
library(UsingR)
head(father.son)
fit <- lm(sheight~fheight)
fit <- lm(sheight~fheight,data=father.son)
coeff(fit)
coef(fit)
fit <- lm(sheight~I(fheight*10),data=father.son)
coef(fit)
with(father.son,plot(fheight,sheight,pch=20))
with(father.son,plot(fheight,sheight,pch=20.col="steelblue"))
with(father.son,plot(fheight,sheight,pch=20,col="steelblue"))
abline(fit)
fit
fit <- lm(sheight~fheight,data = father.son)
plot(fheight,sheight,pch=20,col="steelblue")
with(father.son,plot(fheight,sheight,pch=20,col="steelblue"))
abline(fit)
abline(fit,lwd=4)
with(father.son,plot(fheight,sheight,pch=20,col=alpha("steelblue",0.5)))
linRegression <- function(x,y){
plot(x,y,pch=20,col=alpha("steelblue",0.5))
fit <- lm(y~x)
abline(fit,lwd="3.3")
}
with(father.son,linRegression(fheight,sheight))
linRegression <- function(x,y){
plot(x,y,pch=20,col=alpha("steelblue",0.5))
fit <- lm(y~x)
abline(fit,lwd="3.3", col="red")
}
with(father.son,linRegression(fheight,sheight))
linRegression <- function(x,y){
plot(x,y,pch=20,col=alpha("steelblue",0.5))
fit <- lm(y~x)
abline(fit,lwd="3.3", col=alpha("green",0.8))
}
with(father.son,linRegression(fheight,sheight))
linRegression <- function(x,y){
plot(x,y,pch=20,col=alpha("steelblue",0.5))
fit <- lm(y~x)
abline(fit,lwd="2.5", col=alpha("green",0.8))
}
linRegression <- function(x,y){
plot(x,y,pch=20,col=alpha("steelblue",0.5))
fit <- lm(y~x)
abline(fit,lwd="2", col=alpha("green",0.8))
}
with(father.son,linRegression(fheight,sheight))
install.packages("swirl")
library(swirl)
rm(list=ls())
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4)~parent,galton)
play()
x<-rnorm(100); y<-rnorm(100)
plot(x,y)
plot(jitter(x,4),y)
plot(y~jitter(x,4))
nxt()
regrline <- lm(child~parent,galton)
abline(regrline,lwd=3, col='red')
summary(regrline)
fit <- lm(child~parent,galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals,galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs,rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(galton$parent))
varest
varEst <- var(est(galton$parent,fit$coefficients[2]))
varEst<- var(est(ols.slope,ols.ic))
all.equal(varChild,varRes+varEst)
efit <- lm(accel~mag+dist,attenu)
mean(resid(efit))
mean(resid(efit))
mean(efit$residuals)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
library(swirl)
swirl()
dim(hunger)
948
names(hunger)
fit <- lm(Numeric~Year,hunger)
summary(fit)$coef
lmF <- lm(hunger[hunger$Sex=="Female","Numeric"]~hunger[hunger$Sex=="Female","Year"])
lmF <- lm(hunger[hunger$Sex=="Male","Numeric"]~hunger[hunger$Sex=="Male","Year"])
lmF <- lm(hunger[hunger$Sex=="Female","Numeric"]~hunger[hunger$Sex=="Female","Year"])
lmM <- lm(hunger[hunger$Sex=="Male","Numeric"]~hunger[hunger$Sex=="Male","Year"])
lmBoth <- lm(Numeric~Year+Sex,hunger)
summary(lmBoth)
lmInter <- lm(Numeric~Year+Sex+Year*Sex,hunger)
summary(lmInter)
quit()
head(mtcars)
fit <- lm(mpg~cyl+wt,mtcars)
summary(fit)
lm4 <- lm(mtcars$mpg~as.factor(mtcars$cyl))
summary(lm4)
lm4 <- lm(mtcars$mpg~as.factor(mtcars$cyl)+mtcars$wt)
summary(lm4)
lm4 <- lm(mtcars$mpg~mtcars$wt+as.factor(mtcars$cyl))
summary(lm4)
lm4 <- lm(mtcars$mpg~mtcars$wt+as.factor(mtcars$cyl)+as.factor(mtcars$cyl)*mtcars$wt)
summary(lm4)
lm4 <- lm(mtcars$mpg~as.factor(mtcars$cyl)+mtcars$wt)
summary(lm4)
lmwt <- lm(mtcars$mpg~as.factor(mtcars$cyl)+mtcars$wt)
summary(lm4)
lmwwt <- lm(mtcars$mpg~as.factor(mtcars$cyl))
summary(lmwt)
summary(lmwwt)
anova(lmwt,lmwwt)
lm1 <- lm(mtcars$mpg~ factor(mtcars$cyl)
+ mtcars$wt
+ factor(mtcars$cyl)*mtcars$wt)
lm0 <- lm(mtcars$mpg ~ factor(mtcars$cyl) + mtcars$wt)
anova(lm0,lm1)
lmwt <- lm(mtcars$mpg~as.factor(mtcars$cyl)+mtcars$wt)
summary(lmwt)
## as.factor(mtcars$cyl)8  -6.0709     1.6523  -3.674 0.000999 ***
lmwwt <- lm(mtcars$mpg~as.factor(mtcars$cyl))
summary(lmwwt)
library(zipcode)
data("zipcode")
str(zipcode)
zipcode[zipcode$zip==6450]
zipcode[zipcode$zip==06450]
zipcode[zipcode$zip=="06450"]
zipcode[zipcode$zip=="06450",]
zipcode[zipcode$zip=="6450",]
zipcode[zipcode$zip=="06450",]
zipcode[zipcode$zip=="41700",]
zipcode[zipcode$zip=="041700",]
zipMX <- read.csv("~/data/mx_postal_codes.csv")
zipMX <- read.csv("~/data/mx_postal_codes.csv")
str(zipMX)
zipMX[zipMX$Postal.Code==0650,]
zipMX[zipMX$Postal.Code==650,]
zipMX[zipMX$Postal.Code==6450,]
str(zipMX)
zipMX[zipMX$"Postal.Code"==6450,]
str(zipMX)
zipMX[zipMX$"Postal.Code"==6450 & ! is.na(zipMX$Postal.Code),]
zipMX <- zipMX[!is.na(zipMX$Postal.Code),]
zipMX[zipMX$"Postal.Code"==6450,]
library(plyr)
library(ggmap)
library(zipcode)
myLocation <- c(-99.27,19.25,-99.045,19.5)
myMap <- get_map(location = myLocation,
source="google",
maptype = "hybrid",
crop=FALSE)
ggmap(myMap)
jobLocations <- read.csv("~/data/Joblocations_2017-11-7_1159.csv")
head(jobLocations)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude),
data=jobLocations,
alpha=0.5,
color="red",
size=3)
View(jobLocations)
library(dplyr)
head(jobLocations)
clust <- kmeans(jobLocations[,c("latitude","longitude")],3,10)
clust
clust$centers
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude),
data=jobLocations,
alpha=0.5,
color=factor(clust$cluster),
size=3)
clust
clust$cluster
ggmap(myMap)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude),
data=jobLocations,
alpha=0.5,
color=as.factor(clust$cluster),
size=3)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
#alpha=0.5,
#color=,
size=3)
jobLocations <- filter( jobLocations, ( -99.27 <= longitud )  &  ( longitud <= -99.045 )
& ( 19.25 <= latitude ) & ( latitude <= 19.5 ) )
str(jobLocations)
jobLocations <- filter( jobLocations, ( -99.27 <= longitude )  &  ( longitude <= -99.045 )
& ( 19.25 <= latitude ) & ( latitude <= 19.5 ) )
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
#alpha=0.5,
#color=,
size=3)
library(plyr)
library(ggmap)
library(zipcode)
library(dplyr)
myLocation <- c(-99.27,19.25,-99.045,19.5)
myMap <- get_map(location = myLocation,
source="google",
maptype = "hybrid",
crop=FALSE)
ggmap(myMap)
jobLocations <- read.csv("~/data/Joblocations_2017-11-7_1159.csv")
jobLocations <- filter( jobLocations, ( -99.27 <= longitude )  &  ( longitude <= -99.045 )
& ( 19.25 <= latitude ) & ( latitude <= 19.5 ) )
clust <- kmeans(jobLocations[,c("latitude","longitude")],3,10)
head(jobLocations)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
#alpha=0.5,
#color=,
size=3)
clust <- kmeans(jobLocations[,c("latitude","longitude")],3,100)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
clust <- kmeans(jobLocations[,c("latitude","longitude")],10,100)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
clust <- kmeans(jobLocations[,c("latitude","longitude")],4,100)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
clust <- kmeans(jobLocations[,c("latitude","longitude")],10,100)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
clust <- kmeans(jobLocations[,c("latitude","longitude")],30,100)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
clust <- kmeans(jobLocations[,c("latitude","longitude")],3,100)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
head(jobLocations)
jobLocations <- read.csv("~/data/Joblocations_2017-11-8_1039 (1).csv")
jobLocations <- filter( jobLocations, ( -99.27 <= longitude )  &  ( longitude <= -99.045 )
& ( 19.25 <= latitude ) & ( latitude <= 19.5 ) )
str(jobLocations)
clust <- kmeans(jobLocations[,c("latitude","longitude","items_cost")],3,100)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
jobLocations <- read.csv("~/data/Joblocations_2017-11-8_1039 (1).csv")
jobLocations <- filter( jobLocations, ( -99.27 <= longitude )  &  ( longitude <= -99.045 )
& ( 19.25 <= latitude ) & ( latitude <= 19.5 ) )
clust <- kmeans(jobLocations[,c("latitude","longitude","items_cost")],3,100)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
clust <- kmeans(jobLocations[,c("latitude","longitude","items_cost")],3,1000)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
clust <- kmeans(jobLocations[,c("latitude","longitude","items_cost")],2,100000)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
names(jobLocations)
clust <- kmeans(jobLocations[,c("latitude","longitude","tipo_ganancia")],2,100000)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
clust <- kmeans(jobLocations[,c("latitude","longitude","tipo_ganancia")],30,100000)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
clust <- kmeans(jobLocations[,c("latitude","longitude","items_cost")],30,100000)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
clust <- kmeans(jobLocations[,c("latitude","longitude","items_cost")],10,100000)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
clust <- kmeans(jobLocations[,c("latitude","longitude","items_cost")],15,100000)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
clust <- kmeans(jobLocations[,c("items_cost")],3,1000)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
mutate(jobLocations,group=clust)
jobLocations <- read.csv("~/data/Joblocations_2017-11-8_1039 (1).csv")
jobLocations <- filter( jobLocations, ( -99.27 <= longitude )  &  ( longitude <= -99.045 )
& ( 19.25 <= latitude ) & ( latitude <= 19.5 ) )
clust <- kmeans(jobLocations[,c("items_cost")],3,1000)
mutate(jobLocations,g=clust)
jobLocations$"g" <- clust
jobLocations$"g" <- clust$cluster
head(jobLocations)
library(plyr)
library(ggmap)
library(zipcode)
library(dplyr)
myLocation <- c(-99.27,19.25,-99.045,19.5)
myMap <- get_map(location = myLocation,
source="google",
maptype = "hybrid",
crop=FALSE)
jobLocations <- read.csv("~/data/Joblocations_2017-11-8_1039 (1).csv")
jobLocations <- filter( jobLocations, ( -99.27 <= longitude )  &  ( longitude <= -99.045 )
& ( 19.25 <= latitude ) & ( latitude <= 19.5 ) )
clust <- kmeans(jobLocations[,c("latitude","longitude")],3,1000)
head(jobLocations)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
mutate(jobLocations,g=clust)
setwd("~/GitHub/iguanafixData/scripts")
library(plyr)
library(ggmap)
library(zipcode)
library(dplyr)
myLocation <- c(-99.27,19.25,-99.045,19.5)
myMap <- get_map(location = myLocation,
source="google",
maptype = "hybrid",
crop=FALSE)
jobLocations <- read.csv("~/data/Joblocations_2017-11-8_1039 (1).csv")
jobLocations <- filter( jobLocations, ( -99.27 <= longitude )  &  ( longitude <= -99.045 )
& ( 19.25 <= latitude ) & ( latitude <= 19.5 ) )
clust <- kmeans(jobLocations[,c("latitude","longitude")],3,1000)
head(jobLocations)
ggmap(myMap) + geom_point(aes(x=longitude,y=latitude,colour=as.factor(clust$cluster)),
data=jobLocations,
alpha=0.5,
#color=,
size=3)
mutate(jobLocations,g=clust)
